name: Upload Excess to IC Source

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry run (CSV only, no FTP upload)"
        required: false
        default: "false"
  schedule:
    - cron: "0 */6 * * *"  # every 6 hours

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install deps without needing a lockfile
      - name: Install deps
        run: npm i --no-audit --no-fund

      - name: Export & (optionally) Upload
        env:
          # ---- Supabase (must exist) ----
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}  # or your SERVICE_ROLE

          # Tables (script accepts either "excess_parts" or "public.excess_parts")
          SUPABASE_EXCESS_TABLE: excess_parts
          SUPABASE_LOGS_TABLE: ic_source_uploads

          # Export paging & rules
          PAGE_SIZE: "1000"
          PAGINATE_COL: "id"
          ADJUST_RATIO: "0.8"

          # Dry run flag (read by the script)
          DRY_RUN: ${{ github.event.inputs.dry_run }}

          # ---- IC Source FTP credentials (must exist) ----
          ICSOURCE_FTP_HOST: ftp.icsource.com
          ICSOURCE_FTP_USER: ${{ secrets.ICSOURCE_FTP_USER }}
          ICSOURCE_FTP_PASS: ${{ secrets.ICSOURCE_FTP_PASS }}
          ICSOURCE_FTP_DIR: "/"
          ICSOURCE_FTPS: "false"   # your current setup

        run: |
          mkdir -p out
          node scripts/export-and-upload-icsource.mjs

      - name: Upload CSV as artifact (so you can download it)
        if: ${{ success() && hashFiles('out/verified_inventory.csv') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: verified_inventory
          path: out/verified_inventory.csv
          if-no-files-found: warn



