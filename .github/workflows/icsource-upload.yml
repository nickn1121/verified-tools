name: Upload Excess to IC Source

on:
  # Manual trigger (used by your "Send Now" button and Actions UI)
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Generate CSV only (no FTP upload)"
        type: boolean
        default: false

  # Scheduled trigger - every 6 hours (UTC)
  schedule:
    - cron: "0 */6 * * *"

concurrency:
  group: ic-source-upload
  cancel-in-progress: false

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # NOTE: cache removed to avoid error when no lock file is present

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Export & (optionally) Upload
        env:
          # --- Supabase (server-side) ---
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          SUPABASE_EXCESS_TABLE: ${{ vars.SUPABASE_EXCESS_TABLE || 'excess_parts' }}

          # --- FTP to IC Source ---
          FTP_HOST: ftp.icsource.com
          FTP_USER: ${{ secrets.ICSOURCE_FTP_USER }}
          FTP_PASS: ${{ secrets.ICSOURCE_FTP_PASS }}
          FTP_SECURE: "false"         # IC Source expects plain FTP
          FTP_DIR: "/"
          OUTPUT_FILE: "verified_inventory.csv"

          # --- Control flags / metadata ---
          DRY_RUN: ${{ (github.event_name == 'workflow_dispatch' && inputs.dry_run) && 'true' || 'false' }}
          GITHUB_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          mkdir -p out
          node scripts/export-and-upload-icsource.mjs

      - name: Upload CSV as artifact (so you can download it)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: verified_inventory
          path: out/verified_inventory.csv
          if-no-files-found: warn



